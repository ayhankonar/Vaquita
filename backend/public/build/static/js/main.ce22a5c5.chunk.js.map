{"version":3,"sources":["services/rifas.js","components/RifaCard.js","pages/Home.js","pages/NotFound.js","services/auth.js","pages/Signup.js","hooks/context.js","pages/Login.js","pages/Profile.js","pages/ProfileEdit.js","components/RifaForm.js","pages/CreateRifa.js","pages/MyRifas.js","components/RifaEditForm.js","services/tickets.js","pages/RifaDetails.js","pages/EditRifa.js","pages/MyTickets.js","components/LayoutApp.js","Router.js","serviceWorker.js","index.js"],"names":["rifasService","axios","create","baseURL","withCredentials","getUsrRifas","get","getAllRifas","getRifaDetails","id","rifa","createRifa","post","editRifa","put","Title","Typography","RifaCard","title","productName","description","imageProduct","_id","type","extra","to","style","marginBottom","hoverable","src","backgroundColor","level","Home","useState","rifas","setRifas","useEffect","a","data","getRifas","gutter","xs","sm","md","map","key","NotFound","authService","signupFn","user","loginFn","userProfileFn","userProfileEdit","logoutFn","Signup","history","Form","useForm","form","values","push","layout","onFinish","Item","name","label","rules","required","message","Password","block","htmlType","href","danger","MyContext","createContext","Provider","props","setUser","setCtxUser","console","log","profile","value","updateCtxUser","clearCtxUser","useContextInfo","useContext","Login","password","hash","salt","Text","Paragraph","Profile","setProfile","getProfile","size","image","userName","firstName","lastName","email","city","country","cloudinaryAPI","ProfileEditForm","img","setImg","loading","setLoading","editUser","tickets","updatedUser","resetFields","file","FormData","append","secure_url","uploadButton","LoadingOutlined","PlusOutlined","marginTop","initialValues","googleID","showUploadList","beforeUpload","width","RifaForm","addRifa","newRifa","CreateRifa","useHistory","MyRifas","EditRifa","productPrice","ticketPrice","availableTickets","ownerID","editedRifaInput","ticketsService","buyTicket","getRifafromTix","getRifafromWinnerTix","getRifafromLostTix","RifaDetails","rifaId","match","params","setRifa","prueba","setPrueba","change","setChange","buyable","setBuyable","previouslyBought","soldTickets","forEach","el","includes","getDetails","deUsuario","onClick","buyTicketFn","disabled","default","active","MyTickets","winnerTix","setWinnerTix","lostTix","setLostTix","getWinnerRifas","getLoserRifas","Header","Layout","Content","Footer","LayoutApp","children","className","position","zIndex","theme","mode","padding","minHeight","textAlign","Router","exact","path","component","ProfileEdit","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce22a5c5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst prefix = '/api/rifas'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000${prefix}` : prefix\n\nconst rifasService = axios.create({\n  baseURL,\n  // Agregamos with credentials por que el recurso de jobs utiliza al usuario en sesion.\n  withCredentials: true\n})\n\n// Obtener las rifas del user\nexport const getUsrRifas = () => rifasService.get('/myrifas')\n\n// Obtener todas las rifas\nexport const getAllRifas = () => rifasService.get()\n\n// Obtener el detalle de una rifa\nexport const getRifaDetails = (id, rifa) => rifasService.get(`/${id}`, rifa)\n\n// Crear una rifa\nexport const createRifa = rifa => rifasService.post('/new', rifa)\n\n// Editar una rifa\nexport const editRifa = (id, rifa) => rifasService.put(`/${id}`, rifa)\n\n//Borrar una rifa\nexport const deleteRifa = id => rifasService.delete(`/${id}`)\n\n","import React from 'react'\nimport { Card, Avatar, Typography } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst { Title } = Typography\n\n\nfunction RifaCard({ title, productName, description, imageProduct, _id }) {\n  return (\n    <Card\n      type=\"inner\"\n      title={title}\n      extra={<Link to={`/rifas/${_id}`}>Details</Link>}\n      style={{ marginBottom: '8px' }}\n      hoverable>\n      <center>\n        <Avatar src={imageProduct} style={{ backgroundColor: 'white' }} />\n        <Title level={4}>{productName}</Title>\n      </center>\n      {description}\n    </Card>\n  )\n}\n\nexport default RifaCard","import React, { useState, useEffect } from 'react';\nimport { Row, Typography, Card, Button, Modal } from 'antd'\nimport { getAllRifas } from '../services/rifas'\nimport RifaCard from '../components/RifaCard'\n\nfunction Home() {\n  const [rifas, setRifas] = useState([])\n  \n  useEffect(() => {\n    async function getRifas() {\n      const { data } = await getAllRifas()\n      setRifas(data);\n    }\n    getRifas()\n  }, [])\n\n  // rifas.forEach(rifa => {\n  //   rifasFiltered[rifa.status] = [...rifasFiltered[rifa.status], rifa]\n  // })\n\n  return  (\n    <div>\n      <h1>Home</h1>\n      <Row gutter={[16, 16]} xs={24} sm={24} md={8}>\n        {rifas.map(rifa => <RifaCard\n        key={rifa.id}\n        {...rifa}/>)}\n      </Row>\n    </div>\n  ) \n\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  'http://localhost:3000/' :\n  '/'\n\nconst authService = axios.create({baseURL, withCredentials: true })\n\nexport const signupFn = async user => {\n  return await authService.post('/signup', user)\n}\n\nexport const loginFn = async user => {\n  return await authService.post('/login', user)\n}\n\n//GET CURRENT USER\nexport const userProfileFn = async (user) => {\n  return await authService.get(`/profile`, user)\n}\n\n//EDITAR PERFIL\nexport const userProfileEdit = async (id, user) => {\n  return await authService.put(`/profile/edit/${id}`, user)\n}\n\nexport const logoutFn = async () => {\n  return await authService.get('/logout')\n}","import React from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Divider,\n} from 'antd'\n// import Myservice from '../services/index'\nimport {signupFn} from '../services/auth'\n\nconst googleUrl = process.env.NODE_ENV === 'development' ?\n  \"http://localhost:3000/auth/google\" : '/auth/google'\n\nexport default function Signup({\n  history\n}) {\n  const [form] = Form.useForm()\n\n  async function signupProcess(values){\n    // await Myservice.signup(values)\n    // console.log(values)\n    await signupFn(values)\n    history.push('/login')\n    // console.log('user:', values)\n  }\n  \n  return (\n    <div>\n        <Form layout='vertical' form={form} onFinish={signupProcess}>\n          <Form.Item \n            name='userName' \n            label='Nombre de Usuario:'\n            rules={[{required: true, message: 'Please input a name'}]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='firstName' \n            label='Nombre:'\n            rules={[{required: true, message: 'Please input a name'}]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='lastName' \n            label='Apellido:'\n            rules={[{required: true, message: 'Please input a last name'}]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='email' \n            label='Email:'\n            rules={[{required: true, message: 'Please input a valid email address'}]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='password' \n            label='Contraseña:' \n            rules={[{required: true, message: 'Please input a password'}]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item \n            name='password2' \n            label='Confirmar contraseña:' \n            rules={[{required: true, message: 'Please confirm password'}]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Button type=\"primary\" block htmlType=\"submit\">\n            Signup\n          </Button>\n\n        </Form>\n        <Divider>\n          Or\n        </Divider>\n        <a href={googleUrl}>\n          <Button danger block>Signup with Google</Button>\n        </a>\n    </div>\n  );\n}\n","import React, {\n  createContext, \n  useState,\n  useEffect,\n  useContext\n} from 'react'\nimport {userProfileFn} from '../services/auth'\nexport const MyContext = createContext()\n\nexport const Provider = props => {\n  const [user, setUser] = useState(null)\n\n  //Para Login \n  const setCtxUser = user => setUser(user)\n\n  //Para REFRESCAR LOS DATOS \n  const updateCtxUser = user => setUser(user)\n\n  //Para Logout \n  const clearCtxUser = () => setUser(null)\n\n  // Callback para traer session info y perfil de usuario desde servicio \n  useEffect(() => {\n    async function profile(){\n      const {data} = await userProfileFn(user)\n      setCtxUser(data)\n      console.log(data)\n    }\n    profile()\n  }, [])\n\n  //FUNCIONES PARA MANEJAR TODO DEL USUARIO EN EL APP, CHILDREN ES EL ROUTER\n  return (\n    <MyContext.Provider {...props} value={{\n      user,\n      setCtxUser,\n      updateCtxUser,\n      clearCtxUser\n    }}/>\n  )\n}\n\nexport const useContextInfo = () => useContext(MyContext)\n","import React from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Divider,\n} from 'antd'\n\nimport { loginFn } from '../services/auth'\nimport { useContextInfo } from '../hooks/context'\n\n// const {Title} = Typography\n\nexport default function Login({history}){\n  const [form] = Form.useForm()\n  const { setCtxUser } = useContextInfo()\n\n  async function loginProcess(values){\n    const {data: {user}} = await loginFn(values)\n    delete user.password\n    delete user.hash\n    delete user.salt\n    setCtxUser(user)\n    history.push('/profile')\n\n  }\n\n  return (\n    <div>\n      <Form layout='vertical' form={form} onFinish={loginProcess}>\n      \n        <Form.Item\n          name='email'\n          label='Email:'\n          rules={[{required: true, message: 'Please input a valid email address'}]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name='password'\n          label='Password:'\n          rules={[{required: true, message: 'Please input a password'}]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Button type=\"primary\" block htmlType=\"submit\">\n          Log in\n        </Button>\n\n      </Form>\n\n      <Divider>\n        Or\n      </Divider>\n\n      <a href={'http://localhost:3000/auth/google'}>\n        <Button danger block>Login with Google</Button>\n      </a>\n\n  </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { \n  Typography, \n  Row,\n  Avatar,\n  Button,\n  Image,\n  Col\n} from 'antd'\nimport {Link} from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons';\nimport { useContextInfo } from '../hooks/context'\nimport {userProfileFn} from '../services/auth'\n\nconst { Title, Paragraph, Text } = Typography;\n\nexport default function Profile() {\n  const {user}  = useContextInfo()\n  console.log(user)\n  const [profile, setProfile] = useState({})\n\n  useEffect(() => {\n    async function getProfile() {\n      const { data } = await userProfileFn(user?._id)\n      setProfile(data)\n      console.log(data)\n    }\n\n    getProfile()\n  }, [])\n\n  return (\n    <Col>\n      {user ? (\n      <>\n        <div>\n          <Avatar size={128} src={<Image src={user?.image}/>}/>\n        </div>\n        <div>\n        <Typography>\n          <Title level={3}>\n            Welcome, {user.userName}\n          </Title>\n\n          <Title level={5}>Username</Title>\n          <Text>{user.userName}</Text>\n\n          <Title level={5}>Name</Title>\n          <Text>{user.firstName} {user.lastName}</Text>\n\n          <Title level={5}>Email</Title>\n          <Text>{user.email}</Text>\n\n          <Title level={5}>City</Title>\n          {user.city ? (\n            <Text>{user.city}</Text>\n          ):(\n            <Text>Edit profile to add</Text>\n          )}\n\n          <Title level={5}>Country</Title>\n          {user.country ? (\n            <Text>{user.country}</Text>\n          ):(\n            <Text>Edit profile to add</Text>\n          )}\n          \n        </Typography>\n        </div>\n        <br/>\n        <Link to={`/profile/edit/${user?._id}`}><Button block>Edit Profile</Button></Link>\n        \n      </>\n      ): (\n        <Typography.Title level={3}>\n          Login pls\n        </Typography.Title>\n      )}\n\n    </Col>\n  )\n}","import React, {useState} from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Divider,\n  InputNumber, \n  Select, \n  Upload \n} from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { userProfileEdit } from '../services/auth'\nimport { useContextInfo } from '../hooks/context'\n\nimport axios from 'axios'\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/dj9edroyv/image/upload'\n\nexport default function ProfileEditForm({history}) {\n  const { user } = useContextInfo()\n  const { updateCtxUser } = useContextInfo()\n  \n  const [form] = Form.useForm()\n  const [img, setImg] = useState(null)\n  const [loading, setLoading] = useState(null)\n\n  async function handleSubmit(values) {\n    console.log(values)\n\n    const editUser = {\n      ...values,\n      image: img,\n      _id: user._id,\n      rifas: user.rifas,\n      tickets: user.tickets\n    }\n    console.log('FORM VALUES: ', {editUser})\n\n    const { data: updatedUser } = await userProfileEdit(user._id, editUser);\n    form.resetFields()\n    setImg(null)\n    updateCtxUser(updatedUser)\n    history.push('/profile')\n  }\n\n  //PROFILE PHOTO UPLOAD\n  async function handleUploadFile(file) {\n    setLoading(true)\n    const data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', 'ml_vaquita')\n\n    const { data: { secure_url } } = await axios.post(cloudinaryAPI, data)\n\n    setImg(secure_url);\n    setLoading(false)\n  }\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  \n  return (\n    <div>\n        <Form layout='vertical' form={form} onFinish={handleSubmit} initialValues={{\n          email: user.email,\n          userName: user.userName,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          googleID: user.googleID,\n          city: user.city,\n          country: user.country,\n          image: user.image\n        }}>\n\n          <Form.Item name=\"image\" label=\"Profile Photo:\">\n            <Upload\n              name=\"image\"\n              showUploadList={false}\n              beforeUpload={handleUploadFile}>\n              {img ? <img src={img} style={{ width: '100%' }} /> : uploadButton}\n            </Upload>\n          </Form.Item>\n\n          <Form.Item \n            name='userName' \n            label='Nombre de Usuario:'\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='firstName' \n            label='Nombre:'\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='lastName' \n            label='Apellido:'\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='email' \n            label='Nuevo email:'\n          >\n            <Input />\n          </Form.Item>\n\n          {/* <Divider></Divider>\n\n          <Form.Item \n            name='password' \n            label='Nueva contraseña:' \n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item \n            name='password2' \n            label='Confirmar nueva contraseña:' \n          >\n            <Input.Password />\n          </Form.Item> */}\n\n          <Divider></Divider>\n\n          <Form.Item \n            name='city' \n            label='Ciudad:' \n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item \n            name='country' \n            label='País:' \n          >\n            <Input />\n          </Form.Item>\n\n          <Button type=\"primary\" block htmlType=\"submit\">\n            Save Changes\n          </Button>\n\n        </Form>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { Form, Button, Input, InputNumber, Select, Upload } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createRifa } from '../services/rifas'\nimport axios from 'axios'\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/dj9edroyv/image/upload'\n\nconst RifaForm = ({ addRifa }) => {\n  // const { user } = useContextInfo()\n  const [form] = Form.useForm()\n  const [img, setImg] = useState(null)\n  const [loading, setLoading] = useState(null)\n\n  async function handleSubmit(values) {\n\n    const rifa = {\n      ...values,\n      imageProduct: img,\n      // ownerID: user._id\n    }\n\n    const { data: newRifa } = await createRifa(rifa);\n    console.log (newRifa)\n    addRifa(newRifa);\n    form.resetFields()\n    setImg(null)\n  }\n\n  async function handleUploadFile(file) {\n    setLoading(true)\n    const data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', 'ml_vaquita')\n\n    const { data: { secure_url } } = await axios.post(cloudinaryAPI, data)\n\n    setImg(secure_url);\n    setLoading(false)\n  }\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n//   title,\n//   description,\n//   productPrice,\n//   productName,\n//   imageProduct,\n//   ticketPrice,\n//   availableTickets,\n//   totalTickets: availableTickets,\n//   ownerID\n\n  return (\n    <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n      <Form.Item name=\"title\" \n      label=\"Title:\"\n      rules={[{required: true, message: 'Please input a title'}]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"description\" \n      label=\"Description:\" \n      rules={[{required: true, message: 'Please input a description'}]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"productName\" \n      label=\"Product Name:\"\n      rules={[{required: true, message: 'Please input a product name'}]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"productPrice\" \n      label=\"Product Price:\"\n      rules={[{required: true, message: 'Please input a product price'}]}>\n        <InputNumber/>\n      </Form.Item>\n      <Form.Item name=\"ticketPrice\" \n      label=\"Ticket Price:\"\n      rules={[{required: true, message: 'Please input a Ticket Price'}]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name=\"availableTickets\" \n      label=\"Available Tickets:\"\n      rules={[{required: true, message: 'Please input a Available Tickets'}]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name=\"imageProduct\" label=\"Image:\">\n        <Upload\n          name=\"image\"\n          showUploadList={false}\n          beforeUpload={handleUploadFile}>\n          {img ? <img src={img} style={{ width: '100%' }} /> : uploadButton}\n        </Upload>\n      </Form.Item>\n      <Button type=\"primary\" block size=\"middle\" htmlType=\"submit\">Create</Button>\n    </Form>\n  )\n}\n\nexport default RifaForm\n","import React, {useState, useEffect} from 'react'\nimport RifaForm from '../components/RifaForm'\nimport { useContextInfo } from '../hooks/context'\nimport { createRifa } from '../services/rifas'\n\n//Importar History\nimport { useHistory } from 'react-router-dom'    \n\nconst CreateRifa = () => {\n    const { user } = useContextInfo()\n    const [rifas, setRifas] = useState([])\n\n    //Declarar variable de history\n    const history = useHistory()\n    \n    // useEffect(() => {\n    //     async function rifaCreate() {\n    //       const { data } = await createRifa()\n    //       setRifas(data);\n    //     }\n    //     rifaCreate()\n    //   }, [])\n\n    function addRifa(rifa) {\n        setRifas([...rifas, rifa])\n        history.push('/rifas/myrifas')\n      }\n    \n    return (\n   \n        <div>\n            <RifaForm addRifa={addRifa} />\n        </div>\n    )\n}\n\nexport default CreateRifa;\n","import React, {useState, useEffect} from 'react'\nimport { getUsrRifas } from '../services/rifas'\nimport RifaCard from '../components/RifaCard'\nimport { useContextInfo } from '../hooks/context'\nimport { Row, Col, Typography, Card, Button, Modal } from 'antd'\nconst { Title, Text } = Typography\n\n\nconst MyRifas = () => {\n    const { user } = useContextInfo()\n    const [rifas, setRifas] = useState([])\n\n    useEffect(() => {\n        async function getRifas() {\n        const { data } = await getUsrRifas()\n        setRifas(data);\n        }\n\n        getRifas()\n    }, [])\n   \n    return user ? (\n      <div>\n        <Row gutter={[16, 16]} xs={24} sm={24} md={8}>\n            {rifas.map(rifa => <RifaCard\n            key={rifa.id}\n            {...rifa}/>)}\n        </Row>\n      </div>\n    ) : <>\n    <Title level={1}>Fake</Title>\n    <Text type=\"secondary\">Login or Signup</Text>\n  </>\n\n}\n\nexport default MyRifas\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Input, InputNumber, Select, Upload } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useContextInfo } from '../hooks/context'\nimport axios from 'axios'\nimport { editRifa } from '../services/rifas'\n\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/dj9edroyv/image/upload'\n\nexport default function EditRifa({\n    _id,\n    title,\n    description,\n    productPrice,\n    productName,\n    imageProduct,\n    ticketPrice,\n    availableTickets,\n    ownerID\n    // totalTickets: availableTickets,\n}){\n  const [rifa, setRifa] = useState({})\n  const { user } = useContextInfo()\n  const [form] = Form.useForm()\n  const [img, setImg] = useState(null)\n  const [loading, setLoading] = useState(null)\n\n  // useEffect(() => {\n  //   async function getDetails() {\n  //     const { data } = await getRifaDetails(rifaId)\n  //     setRifa(data);\n  //   }\n\n  //   getDetails()\n  // // }, [rifaId])\n  // }, [])\n\n\n  async function handleSubmit(values) {\n\n    const editedRifaInput = {\n      ...values,\n      imageProduct: img,\n      ownerID\n    }\n\n    const { data: editedRifa } = await editRifa(_id, editedRifaInput);\n    form.resetFields()\n    setImg(null)\n  }\n\n  async function handleUploadFile(file) {\n    setLoading(true)\n    const data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', 'ml_vaquita')\n\n    const { data: { secure_url } } = await axios.post(cloudinaryAPI, data)\n\n    setImg(secure_url);\n    setLoading(false)\n  }\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  //   title,\n  //   description,\n  //   productPrice,\n  //   productName,\n  //   imageProduct,\n  //   ticketPrice,\n  //   availableTickets,\n  //   totalTickets: availableTickets,\n  //   ownerID\n\n  return (\n    <Form form={form} layout=\"vertical\" onFinish={handleSubmit} initialValues={\n      {\n        title,\n        description,\n        productPrice,\n        productName,\n        imageProduct,\n        ticketPrice,\n        availableTickets,\n        // totalTickets: availableTickets,\n      }\n    }>\n      <Form.Item \n        name=\"title\" \n        label=\"Title:\"\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item \n        name=\"description\" \n        label=\"Description:\" \n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item \n        name=\"productName\" \n        label=\"Product Name:\"\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item \n        name=\"productPrice\" \n        label=\"Product Price:\"\n      >\n        <InputNumber/>\n      </Form.Item>\n\n      <Form.Item \n        name=\"ticketPrice\" \n        label=\"Ticket Price:\"\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item \n        name=\"availableTickets\" \n        label=\"Available Tickets:\"\n      >\n        <InputNumber />\n      </Form.Item>\n      \n      <Form.Item name=\"imageProduct\" label=\"Image:\">\n        <Upload\n          name=\"image\"\n          showUploadList={false}\n          beforeUpload={handleUploadFile}>\n          {img ? <img src={img} style={{ width: '100%' }} /> : uploadButton}\n        </Upload>\n      </Form.Item>\n      <Button type=\"primary\" block size=\"middle\" htmlType=\"submit\">Save Changes</Button>\n    </Form>\n  )\n}","import axios from 'axios'\n\nconst prefix = '/api/tickets'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000${prefix}` : prefix\n\nconst ticketsService = axios.create({\n  baseURL,\n  // Agregamos with credentials por que el recurso de jobs utiliza al usuario en sesion.\n  withCredentials: true\n})\n\n// Obtener las rifas del user\nexport const getUsrTickets = () => ticketsService.get('/mytickets')\n\n//Comprar ticket\nexport const buyTicket = (id) => ticketsService.post(`/bought-ticket/${id}`)\n\n//Get rifas from user tickets\nexport const getRifafromTix = () => ticketsService.get('/rifas')\n\n//Get winner rifas from user tickets\nexport const getRifafromWinnerTix = () => ticketsService.get('/winner-rifas')\n\nexport const getRifafromLostTix = () => ticketsService.get('/lost-rifas')","import React, { useState, useEffect } from 'react'\nimport { Card, Avatar, Typography, Button, Modal, Skeleton } from 'antd'\nimport RifaEditForm from '../components/RifaEditForm'\nimport { getRifaDetails } from '../services/rifas'\nimport { getUsrTickets, getRifafromTix, getRifafromWinnerTix, getRifafromLostTix } from '../services/tickets'\nimport {buyTicket} from '../services/tickets'\nimport RifaCard from '../components/RifaCard'\nimport { useContextInfo } from '../hooks/context'\nimport {Link} from 'react-router-dom'\n// import { editRifa } from '../services/rifas'\n\nconst { Title, Text } = Typography\n\nconst RifaDetails = ({\n  match: {\n    params: {\n      rifaId\n    }\n  }\n}) => {\n  const [rifa, setRifa] = useState({})\n  const { user } = useContextInfo()\n  const [showModal, setShowModal] = useState(false)\n  const [prueba, setPrueba] = useState(false)\n  const [change, setChange] = useState(false)\n  const [count, setCount] = useState()\n  const [buyable, setBuyable] = useState(false)\n  let previouslyBought = true\n\n  useEffect(() => {\n    async function getDetails() {\n      const { data } = await getRifaDetails(rifaId)\n      \n      //1.Para confirmar que el usuario no haya comprado boleto previamente\n      data.soldTickets.forEach(el => {\n        if (user && user.tickets.includes(el)){\n          return previouslyBought = true\n        }\n      })\n      \n      if (data.availableTickets > 0 && previouslyBought === false){\n        setBuyable(true)\n      } else {\n        setBuyable(false)\n      }\n      setRifa(data);\n    }\n\n    // function buyTix(){}\n    getDetails()\n    // setChange(false)\n    //RESET DE PAGINA\n  }, [change])\n\n  //PARA VERIFICAR SI EL USUARIO ES DUE~O DE LA RIFA Y MOSTRA BOTONES DIFERENTES\n  let deUsuario = false\n  if (user && rifa.ownerID === user._id) {\n    deUsuario = true\n  }\n\n  //SUPESTAMENTE PARA PASAR Y ACTUALIZAR EL FORMULARIO PERO NO ME FUNCIONA. \n  function editRifa(rifas){\n    setRifa([...rifa,rifas])\n  }\n\n  \n  \n  //findbyidandupdate with patch\n  async function buyTicketFn(){\n    console.log(rifaId)\n    await buyTicket(rifaId)\n    setBuyable(false)\n    setChange(!change)\n  }\n\n  /* REFERENCIA: DE CONTROLLERS\n    exports.boughtTicket = async (req, res) => {\n      const { rifaId } = req.params\n      const rifa = await Rifa.findOne({ _id: rifaId })\n      console.log(rifa, \"RIFA\")\n      if (rifa.availableTickets === 0) {\n        // return res.redirect(\"/\")\n        return res.status(403).json({msg: 'No more tickets'})\n      }\n      // 1. Generar el ticket\n      const ticket = await Ticket.create({\n        owner: req.user.id,\n        rifa: rifaId\n      })\n      // 2. restar un ticket de la rifa\n      // 3. Agregar el ticket a los tickets vendidos de la rifa\n      console.log(rifa.availableTickets, \"AVAILABLE TICKETS\")\n      rifa.availableTickets -= 1\n      rifa.soldTickets.push(ticket._id)\n    \n      await rifa.save()\n      // 4. Agregamos el ticket al user\n      await User.findByIdAndUpdate(req.user.id, { $push: { tickets: ticket._id } })\n      // res.redirect(\"/profile\")\n      ////CAMBIAR ESTO ^\n      res.status(200).json(ticket)\n    } \n  */\n\n\n\n\n//   async function handleStatus(status) {\n//     const updatedRifa = { ...rifa, status }\n//     const { data: newRifa } = await editRifa(rifa._id, updatedRifa)\n//     setRifa(newRifa)\n//   }\n\n  const { title, imageProduct, description, productName, productPrice, availableTickets } = rifa\n\n  return (\n    <>\n    {title ? (\n    <Card\n        type=\"inner\"\n        title={title}\n      >\n        <center>\n            <Avatar src={imageProduct} style={{ backgroundColor: 'white' }} />\n            <Title level={4}>{productName}</Title>\n            <Text>Description: {description}</Text><br/>\n            <Text> Ticket Price: {productPrice}</Text><br/>\n            <Text> Available Tickets: {availableTickets}</Text><br/>\n        {deUsuario ?? (\n          <>\n          <Button onClick={()=>setPrueba(!prueba)}>Editar</Button>\n          <br/>\n          </>\n        )}\n        {user ? (\n          <>\n            {buyable ? (\n              <Button onClick={()=> buyTicketFn()}>Comprar Boleto</Button>\n            ) : (\n              <Button disabled>Comprar Boleto</Button>\n            )}\n          </>\n        ): (\n          <>\n            <br/>\n            <Link to='/signup'>\n              <Button type=\"primary\">Sign up to buy</Button>\n            </Link>\n            <p>or</p>\n            <Link to='/login'>\n              <Button default>Log in</Button>\n            </Link> \n         </>\n        )}\n\n         \n        \n        </center>\n\n        {/* <Link></Link> */}\n        { prueba &&       \n          <RifaEditForm {...rifa} />\n        }\n        \n        \n    </Card>\n    ):(\n      // <p>No hay tickets disponibles</p>\n      <Skeleton active />\n    )\n  }\n   </>) \n \n}\n\nexport default RifaDetails","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Input, InputNumber, Select, Upload } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { createRifa } from '../services/rifas'\nimport { useContextInfo } from '../hooks/context'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport { getRifaDetails, editRifa } from '../services/rifas'\n\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/dj9edroyv/image/upload'\n\nexport default function EditRifa({\n  match: {\n    params: {\n      rifaId\n    }\n  }\n}){\n  const [rifa, setRifa] = useState({})\n  const { user } = useContextInfo()\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [img, setImg] = useState(null)\n  const [loading, setLoading] = useState(null)\n\n  useEffect(() => {\n    async function getDetails() {\n      const { data } = await getRifaDetails(rifaId)\n      setRifa(data);\n    }\n\n    getDetails()\n  // }, [rifaId])\n  }, [])\n\n  console.log('RIFA CHECK 2', rifa)\n\n  async function handleSubmit(values) {\n\n    const editedRifaInput = {\n      ...values,\n      imageProduct: img,\n    }\n\n    console.log (editedRifaInput)\n    // const { data: editedRifa } = await editRifa(editedRifaInput);\n    // console.log (editedRifa)\n    form.resetFields()\n    setImg(null)\n    history.push(`/rifas/myrifas${rifaId}`)\n  }\n\n  async function handleUploadFile(file) {\n    setLoading(true)\n    const data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', 'ml_vaquita')\n\n    const { data: { secure_url } } = await axios.post(cloudinaryAPI, data)\n\n    setImg(secure_url);\n    setLoading(false)\n  }\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  //   title,\n  //   description,\n  //   productPrice,\n  //   productName,\n  //   imageProduct,\n  //   ticketPrice,\n  //   availableTickets,\n  //   totalTickets: availableTickets,\n  //   ownerID\n\n  return (\n    <Form form={form} layout=\"vertical\" onFinish={handleSubmit} initialValues={\n      {\n        title: rifa.title,\n        description: rifa.description,\n        productPrice: rifa.productPrice,\n        productName: rifa.productName,\n        imageProduct: rifa.imageProduct,\n        ticketPrice: rifa.ticketPrice,\n        availableTickets: rifa.availableTickets,\n      }\n    }>\n      <Form.Item name=\"title\" \n      label=\"Title:\"\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"description\" \n      label=\"Description:\" \n      >\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"productName\" \n      label=\"Product Name:\"\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"productPrice\" \n      label=\"Product Price:\"\n      >\n        <InputNumber/>\n      </Form.Item>\n      <Form.Item name=\"ticketPrice\" \n      label=\"Ticket Price:\"\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name=\"availableTickets\" \n      label=\"Available Tickets:\"\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name=\"imageProduct\" label=\"Image:\">\n        <Upload\n          name=\"image\"\n          showUploadList={false}\n          beforeUpload={handleUploadFile}>\n          {img ? <img src={img} style={{ width: '100%' }} /> : uploadButton}\n        </Upload>\n      </Form.Item>\n      <Button type=\"primary\" block size=\"middle\" htmlType=\"submit\">Create</Button>\n    </Form>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport { getUsrTickets, getRifafromTix, getRifafromWinnerTix, getRifafromLostTix } from '../services/tickets'\nimport RifaCard from '../components/RifaCard'\nimport { getRifaDetails } from '../services/rifas'\nimport { useContextInfo } from '../hooks/context'\nimport { Row, Col, Typography, Card, Button, Modal, Spin } from 'antd'\nconst { Title, Text } = Typography\n\nconst MyTickets = () => {\n    const { user } = useContextInfo()\n    // const [tickets, setTickets] = useState([])\n    const [winnerTix, setWinnerTix] = useState(null)\n    const [lostTix, setLostTix] = useState(null)\n    const [rifas, setRifas] = useState(null)\n\n    // useEffect(() => {\n    //     async function getTickets() {\n    //     const { data } = await getUsrTickets()\n    //     //if ticketWinner = true\n    //     //getRifafrom \n    //     console.log(data,\"DATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\n    //     setTickets(data);\n    //     }\n\n\n    //     getTickets()\n    // }, [])\n\n    useEffect(() => {\n        async function getRifas(){\n            const { data } = await getRifafromTix()\n            console.log('NOT FINISHED', data)\n            setRifas(data)\n        }\n\n        getRifas()\n    }, [])\n\n    useEffect(() => {\n        async function getWinnerRifas(){\n            const { data } = await getRifafromWinnerTix()\n            console.log('WINNER', data)\n            setWinnerTix(data)\n        }\n\n        getWinnerRifas()\n    }, [])\n\n    useEffect(() => {\n        async function getLoserRifas(){\n            const { data } = await getRifafromLostTix()\n            console.log('LOSER RIFAS', data)\n            setLostTix(data)\n        }\n\n        getLoserRifas()\n    }, [])\n\n    return  (\n        <div>\n        {winnerTix && (\n            <>\n                <h1>FELICIDADES, aqui estan tus rifas ganadas</h1>\n                <Row gutter={[16, 16]} xs={24} sm={24} md={8}>\n                    {winnerTix.map(rifa => <RifaCard\n                    key={rifa.id}\n                    {...rifa}/>)}\n                </Row>\n                <hr/>\n            </>\n        )}\n        <h2>Rifas abiertas</h2>\n        {rifas ? (\n            <Row gutter={[16, 16]} xs={24} sm={24} md={8}>\n                {rifas.map(rifa => <RifaCard\n                key={rifa.id}\n                {...rifa}/>)}\n            </Row>\n            ): <Spin size=\"large\"/>\n        }\n\n        <hr/>\n        <h2>Rifas cerradas</h2>\n        {lostTix ? (\n            <Row gutter={[16, 16]} xs={24} sm={24} md={8}>\n                {lostTix.map(rifa => <RifaCard\n                key={rifa.id}\n                {...rifa}/>)}\n            </Row>\n            ): <Spin size=\"large\" />\n        }\n      </div>\n    )\n    //   ) : <>\n    //   <Title level={1}>Fake</Title>\n    //   <Text type=\"secondary\">compra tus tickets no seas ..</Text>\n    // </>\n  \n}\n\nexport default MyTickets\n","import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context'\nimport { logoutFn } from '../services/auth'\nconst { Header, Content, Footer } = Layout;\n\n\nconst LayoutApp = ({ children }) => {\n\n  //LEER USER\n  // const { clearCtxUser, user } = useContext(MyContext)\n  const { clearCtxUser, user } = useContextInfo()\n\n  //PARA LOGOUT\n  async function handleLogout() {\n    await logoutFn()\n    clearCtxUser()\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Header style={{position: 'fixed', zIndex: 1000, width: '100%'}}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\">\n\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n\n          {!user ? <>\n              <Menu.Item key=\"2\">\n                <Link to=\"/signup\">Signup</Link>\n              </Menu.Item>\n\n              <Menu.Item key=\"3\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n            </> : <>\n              <Menu.Item key=\"2\">\n                <Link to=\"/profile\">Profile</Link>\n              </Menu.Item>\n\n              <Menu.Item key=\"3\" onClick={handleLogout}>\n                Logout\n              </Menu.Item>\n\n              <Menu.Item key=\"4\">\n                <Link to=\"/new/rifas\">Crear Rifa</Link>\n              </Menu.Item>\n    \n              <Menu.Item key=\"5\">\n                  <Link to=\"/rifas/myrifas\">Mis rifas</Link>\n                </Menu.Item>\n\n              <Menu.Item key=\"6\">\n                  <Link to=\"/tickets/mytickets\">Mis Tickets</Link>\n                </Menu.Item>\n              </>}\n\n          \n        </Menu>\n      </Header>\n      <br />\n      <Content style={{ padding: '75px 50px 0 50px', minHeight: 'calc(100vh - 153.6px)' }}>\n        <div className=\"site-layout-content\">{children}</div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Vaquita de la suerte 🍀 <br/> ©2020 Created by Ayhan Konar & Karen Roth</Footer>\n    </Layout>\n  )\n}\n\nexport default LayoutApp","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport {CreateRifa, Home, NotFound, Signup, Login, Profile, MyRifas, ProfileEdit, RifaDetails, EditRifa, MyTickets } from './pages'\n\nimport LayoutApp from \"./components/LayoutApp\";\n\n\n\nconst Router = () => (\n  <BrowserRouter>\n  <LayoutApp>\n    <Switch>\n      <Route \n        exact path=\"/\" \n        component={Home} \n      />\n      <Route\n        exact path= \"/signup\"\n        component={Signup}\n      />\n      <Route\n        exact path= \"/login\"\n        component={Login}\n      />\n      <Route\n        exact path= \"/profile\"\n        component={Profile}\n      />\n      <Route\n        exact path= \"/profile/edit/:id\"\n        component={ProfileEdit}\n      />\n       <Route\n        exact path= \"/new/rifas\"\n        component={CreateRifa}\n      />\n      <Route\n        exact path= \"/rifas/myrifas\"\n        component={MyRifas}\n      />\n       <Route\n        exact path= \"/rifas/:rifaId\"\n        component={RifaDetails}\n      />\n      <Route\n        exact path= \"/rifas/edit/:rifaId\"\n        component={EditRifa}\n      />\n      <Route\n        exact path= \"/tickets/mytickets\"\n        component={MyTickets}\n      />\n\n      {/* <Route\n        exact path= \"/bought-ticket/:rifaId\"\n        component={buyTickets}\n      /> */}\n      \n      <Route component={NotFound} />\n    </Switch>\n    </LayoutApp>\n  </BrowserRouter>\n);\n\nexport default Router;\n\n// import axios from 'axios'\n\n// const baseURL = process.env.NODE_ENV === 'development' ?\n//   'http://localhost:3000/' :\n//   '/'\n\n// const authService = axios.create({\n//   baseURL,\n//   withCredentials: true\n// })\n\n// export const signupFn = userInfo =>\n//   authService.post('/signup', userInfo)\n\n// export const loginFn = userInfo =>\n// authService.post('/login', userInfo)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\nimport {Provider} from './hooks/context'\n\nReactDOM.render(\n    <Provider>\n      <Router />\n    </Provider>\n    ,\n    document.getElementById('root')\n  );\n  \n\nserviceWorker.unregister();\n"],"sourceRoot":""}